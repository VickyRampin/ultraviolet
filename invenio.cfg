"""
InvenioRDM settings for NYU Data Repository project.

This file was automatically generated by 'invenio-cli init'.

For the full list of settings and their values, see
https://invenio-app-rdm.readthedocs.io/en/latest/configuration.html
and the config.py files of your installed modules
https://invenio.readthedocs.io/en/latest/general/bundles.html

Only configuration created via cookiecutter or very likely to be edited
by installer are included here.
"""
import os
from datetime import timedelta
from dotenv import load_dotenv

from flask_babelex import lazy_gettext as _
from ultraviolet_saml.handlers import acs_handler_factory

# Flask
# =====
# See https://flask.palletsprojects.com/en/1.1.x/config/

#load configs from file. The .env file which comes here is a placeholder.
#it needs to be replaced
load_dotenv()
# SECURITY WARNING: keep the secret key used in production secret!
# TODO: Set
SECRET_KEY = os.getenv("FLASK_SECRET_KEY")

if not SECRET_KEY:
    raise ValueError("No SECRET_KEY set for Flask application")

PERMANENT_SESSION_LIFETIME = timedelta(days=1)

# Since HAProxy and Nginx route all requests no matter the host header
# provided, the allowed hosts variable is set to localhost. In production it
# should be set to the correct host and it is strongly recommended to only
# route correct hosts to the application.
APP_ALLOWED_HOSTS = os.getenv("APP_ALLOWED_HOSTS",['0.0.0.0', 'localhost', '127.0.0.1','34.66.53.163'])


# Flask-SQLAlchemy
# ================
# See https://flask-sqlalchemy.palletsprojects.com/en/2.x/config/

# TODO: Set
SQLALCHEMY_DATABASE_URI = os.getenv("SQLALCHEMY_DATABASE_URI","postgresql+psycopg2://nyudatarepository:nyudatarepository@localhost/nyudatarepository")

# Invenio-App
# ===========
# See https://invenio-app.readthedocs.io/en/latest/configuration.html
ACCOUNTS_LOCAL_LOGIN_ENABLED = True

APP_DEFAULT_SECURE_HEADERS = {
    'content_security_policy': {
        'default-src': [
            "'self'",
            'fonts.googleapis.com',  # for fonts
            '*.gstatic.com',    # for fonts
            'data:', # for fonts
            "'unsafe-inline'",  # for inline scripts and styles
            "'unsafe-eval'", # for webpack build
            "blob:",            # for pdf preview
            # Add your own policies here (e.g. analytics)
        ],
    },
    'content_security_policy_report_only': False,
    'content_security_policy_report_uri': None,
    'force_file_save': False,
    'force_https': True,
    'force_https_permanent': False,
    'session_cookie_http_only': True,
    'session_cookie_secure': True,
    'strict_transport_security': True,
    'strict_transport_security_include_subdomains': True,
    'strict_transport_security_max_age': 31556926,  # One year in seconds
    'strict_transport_security_preload': False,
}

PREVIEWER_PREFERENCE = [
    'csv_dthreejs',
    'simple_image',
    'json_prismjs',
    'xml_prismjs',
    'mistune',
    'pdfjs',
    'ipynb',
    'gis',
    'zip',
]
#community
#COMMUNITIES_ENABLED =
COMMUNITIES_GROUPS_ENABLED = True
#DOI
DATACITE_ENABLED = True

#DATACITE_USERNAME = os.getenv("DATACITE_USERNAME","")
#DATACITE_PASSWORD = os.getenv("DATACITE_PASSWORD","")
#DATACITE_PREFIX = os.getenv("DATACITE_PREFIX","")
#DATACITE_TEST_MODE = os.getenv("DATACITE_TEST_MODE","True")



# Flask-Babel
# ===========
# See https://flask-babel.tkte.ch/#configuration

# Default locale (language)
BABEL_DEFAULT_LOCALE = 'en'
# Default time zone
BABEL_DEFAULT_TIMEZONE = 'America/New_York'


# Invenio-I18N
# ============
# See https://invenio-i18n.readthedocs.io/en/latest/configuration.html

BABEL_DEFAULT_LOCALE = 'en'
# Other supported languages (do not include BABEL_DEFAULT_LOCALE in list).


# Invenio-SAML Configuration
# ==========================
# See https://inveniordm.docs.cern.ch/customize/authentication/#saml-integration

SSO_SAML_DEFAULT_BLUEPRINT_PREFIX = '/saml'
"""Base URL for the extensions endpoint."""

SSO_SAML_DEFAULT_METADATA_ROUTE = '/metadata/<idp>'
"""URL route for the metadata request."""

SSO_SAML_DEFAULT_SSO_ROUTE = '/login/<idp>'
"""URL route for the SP login."""

SSO_SAML_DEFAULT_ACS_ROUTE = '/authorized/<idp>'
"""URL route to handle the IdP login request."""

SSO_SAML_DEFAULT_SLO_ROUTE = '/slo/<idp>'
"""URL route for the SP logout."""

SSO_SAML_DEFAULT_SLS_ROUTE = '/sls/<idp>'
"""URL route to handle the IdP logout request."""

SSO_SAML_IDPS = {

    # name your authentication provider
    'nyu_mock': {

        # Basic info
        "title": "NYU Mock SAML",
        "description": "SAML Authentication Service for Ultraviolet",
        "icon": "static/images/logo_ultraviolet_1word_white.svg",

        # path to the file i.e. "./saml/sp.crt"
        'sp_cert_file': './certificate.pem',

        # path to the file i.e. "./saml/sp.key"
        'sp_key_file': './sp.pem',

        'settings': {
            # If strict is True, then the Python Toolkit will reject unsigned
            # or unencrypted messages if it expects them to be signed or encrypted.
            # Also it will reject the messages if the SAML standard is not strictly
            # followed. Destination, NameId, Conditions ... are validated too.
            'strict': True,

            # Enable debug mode (outputs errors).
            'debug': True,

            # Service Provider Data that we are deploying.
            'sp': {

                # Specifies the constraints on the name identifier to be used to
                # represent the requested subject.
                # Take a look on https://github.com/onelogin/python-saml/blob/master/src/onelogin/saml2/constants.py
                # to see the NameIdFormat that are supported.
                'NameIDFormat': 'urn:oasis:names:tc:SAML:2.0:nameid-format:transient'
            },

            # Identity Provider Data that we want connected with our SP.
            'idp': {

                # Identifier of the IdP entity  (must be a URI)
                'entityId': 'http://localhost:8080/simplesaml/saml2/idp/metadata.php',

                # SSO endpoint info of the IdP. (Authentication Request protocol)
                'singleSignOnService': {

                    # URL Target of the IdP where the Authentication Request Message
                    # will be sent.
                    'url': 'http://localhost:8080/simplesaml/saml2/idp/SSOService.php',

                    # SAML protocol binding to be used when returning the <Response>
                    # message. OneLogin Toolkit supports the HTTP-Redirect binding
                    # only for this endpoint.
                    'binding':
                        'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect'
                },

                # SLO endpoint info of the IdP.
                'singleLogoutService': {
                    # URL Location where the <LogoutRequest> from the IdP will be sent (IdP-initiated logout)
                    "url": "http://localhost:8080/simplesaml/saml2/idp/SingleLogoutService.php",

                    # SAML protocol binding to be used when returning the <Response>
                    # message. OneLogin Toolkit supports the HTTP-Redirect binding
                    # only for this endpoint.
                    "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"
                },
                # Public X.509 certificate of the IdP
                'x509cert': 'MIIDXTCCAkWgAwIBAgIJALmVVuDWu4NYMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQwHhcNMTYxMjMxMTQzNDQ3WhcNNDgwNjI1MTQzNDQ3WjBFMQswCQYDVQQGEwJBVTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzUCFozgNb1h1M0jzNRSCjhOBnR+uVbVpaWfXYIR+AhWDdEe5ryY+CgavOg8bfLybyzFdehlYdDRgkedEB/GjG8aJw06l0qF4jDOAw0kEygWCu2mcH7XOxRt+YAH3TVHa/Hu1W3WjzkobqqqLQ8gkKWWM27fOgAZ6GieaJBN6VBSMMcPey3HWLBmc+TYJmv1dbaO2jHhKh8pfKw0W12VM8P1PIO8gv4Phu/uuJYieBWKixBEyy0lHjyixYFCR12xdh4CA47q958ZRGnnDUGFVE1QhgRacJCOZ9bd5t9mr8KLaVBYTCJo5ERE8jymab5dPqe5qKfJsCZiqWglbjUo9twIDAQABo1AwTjAdBgNVHQ4EFgQUxpuwcs/CYQOyui+r1G+3KxBNhxkwHwYDVR0jBBgwFoAUxpuwcs/CYQOyui+r1G+3KxBNhxkwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAAiWUKs/2x/viNCKi3Y6blEuCtAGhzOOZ9EjrvJ8+COH3Rag3tVBWrcBZ3/uhhPq5gy9lqw4OkvEws99/5jFsX1FJ6MKBgqfuy7yh5s1YfM0ANHYczMmYpZeAcQf2CGAaVfwTTfSlzNLsF2lW/ly7yapFzlYSJLGoVE+OHEu8g5SlNACUEfkXw+5Eghh+KzlIN7R6Q7r2ixWNFBC/jWf7NKUfJyX8qIG5md1YUeT6GBW9Bm2/1/RiO24JTaYlfLdKK9TYb8sG5B+OLab2DImG99CJ25RkAcSobWNF5zD0O6lgOo3cEdB/ksCq3hmtlC/DlLZ/D8CJ+7VuZnS1rR2naQ=='
            },

            # Security settings
            # more on https://github.com/onelogin/python-saml
            'security': {
                'authnRequestsSigned': False,
                'failOnAuthnContextMismatch': False,
                'logoutRequestSigned': False,
                'logoutResponseSigned': False,
                'metadataCacheDuration': None,
                'metadataValidUntil': None,
                'nameIdEncrypted': False,
                'requestedAuthnContext': False,
                'requestedAuthnContextComparison': 'exact',
                'signMetadata': False,
                'signatureAlgorithm':
                    'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256',
                'wantAssertionsEncrypted': False,
                'wantAssertionsSigned': False,
                'wantAttributeStatement': False,
                'wantMessagesSigned': False,
                'wantNameId': True,
                'wantNameIdEncrypted': False,
                'digestAlgorithm':
                    'http://www.w3.org/2001/04/xmlenc#sha256'
            },
        },

        # Account Mapping as per NYU's available mappings. Please take a look here https://wikis.nyu.edu/download/attachments/40274104/SAMLShibbolethIntegrationGuidev2.1.pdf?version=1&modificationDate=1517176083918&api=v2
        "mappings": {
            "email": "eduPersonPrincipleName",
            "name": "givenName",
            "surname": "surname",
            "external_id": "uid"
        },

        # Default Affiliation to be assigned to all SAML logged in users - remove this if not required
        "default_affiliation": "New York University",

        # This is used to automatically set email and profile visibility to public to all SAML logged in users - remove this if not required
        "default_visibility": "public",

        # Inject your remote_app to handler
        # Note: keep in mind the string should match
        # given name for authentication provider
        'acs_handler': acs_handler_factory('nyu_mock'),

        # Auto confirms all SAML logged in users
        'auto_confirm': True
    }
}

SSO_SAML_ROLES = {
        # Default role to be assigned to all SAML logged in users - remove this if not required
        "nyu_mock": "nyuusers",
}

# The following is a hacky implementation. It should be False for a fresh invenio installation. After creating a community and adding the nyuusers role to the community, add the community ID as a list here
# For example: "auto_update_communities": ["c441b9c2-40e0-4035-96cc-8e13bd28d0f7"] where c441b9c2-40e0-4035-96cc-8e13bd28d0f7 is the community ID retrieved from the communities_metadata table. If one
# community is updated here, no need to update for subsequent communities, they add new group members automatically.
COMMUNITIES_AUTO_UPDATE = False
OAUTHCLIENT_LOGIN_USER_TEMPLATE = "ultraviolet_saml/login_user.html"

# Invenio-Theme
# =============
# See https://invenio-theme.readthedocs.io/en/latest/configuration.html

# Frontpage title
THEME_FRONTPAGE_TITLE = "UltraViolet"
# Header logo
THEME_LOGO = 'images/logo_ultraviolet_1word_white.svg'
# Site Name
THEME_SITENAME = 'UltraViolet'

# Default values for deposit form
APP_RDM_DEPOSIT_FORM_DEFAULTS = {
    "rights": [
        {
            "id": "cc-by-4.0",
            "title": "Creative Commons Attribution 4.0 International",
            "description": ("The Creative Commons Attribution license allows "
                            "re-distribution and re-use of a licensed work "
                            "on the condition that the creator is "
                            "appropriately credited."),
            "link": "https://creativecommons.org/licenses/by/4.0/legalcode",
        }
    ],
    "publisher": "UltraViolet",
}

# Invenio-App-RDM
# ===============
# See https://invenio-app-rdm.readthedocs.io/en/latest/configuration.html

# Instance's theme entrypoint file. Path relative to the ``assets/`` folder.
INSTANCE_THEME_FILE = './less/theme.less'


# Invenio-Records-Resources
# =========================
# See https://github.com/inveniosoftware/invenio-records-resources/blob/master/invenio_records_resources/config.py

# TODO: Set with your own hostname when deploying to production
SITE_UI_URL = os.getenv("SITE_UI_URL","https://127.0.0.1:5000")

SITE_API_URL = os.getenv("SITE_API_URL","https://127.0.0.1:5000/api")



# UltraViolet custom vars
# =======================
#

UV_VERSION              = open(".uv-version", "r").read().strip()
UV_POLICIES             = 'https://guides.nyu.edu/ultraviolet'
UV_DOCS                 = 'https://nyudlts.github.io/ultraviolet/'
UV_CURATION_ASSISTANCE  = 'https://guides.nyu.edu/appointment'

DLTS_HOMEPAGE           = 'https://wp.nyu.edu/library-dlts/'
DCN_HOMEPAGE            = 'https://datacurationnetwork.org/'
RDM_HOMEPAGE            = 'https://inveniosoftware.org/products/rdm'
RDM_DOCS_HOMEPAGE       = 'http://inveniordm.docs.cern.ch'
OSF_HOMEPAGE            = 'https://osf.io/'
DATA_SERVICES_HOMEPAGE  = 'https://guides.nyu.edu/dataservices'
NYU_LIBRARIES_HOMEPAGE  = 'https://library.nyu.edu'
SCIP_HOMEPAGE           = 'https://library.nyu.edu/departments/scholarly-communications-information-policy/'
